@use "@carbon/react/scss/spacing" as *;
@use "@carbon/react/scss/colors" as *;
@use "@carbon/react/scss/theme" as *;
@use "@carbon/react/scss/type" as *;
@use "@carbon/react/scss/breakpoint" as *;

.customHeader {
  background-color: #007D79;
  height: $spacing-09;
  display: flex;
  align-items: center;
  width: 100vw;
  margin: 0;
  padding: 0;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1000;
}

.headerContent {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 100%;
  padding: 0 $spacing-05;
}

.breadcrumbSection {
  display: flex;
  align-items: center;
}

// Carbon Breadcrumb styling to match current design
.carbonBreadcrumb {
  // Override Carbon's default styles
  :global(.cds--breadcrumb) {
    display: flex;
    align-items: center;
  }

  // Style breadcrumb items
  :global(.cds--breadcrumb-item) {
    display: flex;
    align-items: center;

    a, button, span {
      color: $text-on-color;
      @include type-style("body-compact-01");
      text-decoration: none;
      background: none;
      border: none;
      padding: 0;
      cursor: pointer;
      
      &:hover {
        text-decoration: underline;
      }
      
      &:focus {
        outline: 2px solid $focus;
        outline-offset: $spacing-01;
      }
    }
  }
  
  // Current page styling (last item)
  :global(.cds--breadcrumb-item--current) {
    span {
      font-weight: 600;
      cursor: default;
      
      &:hover {
        text-decoration: none;
      }
    }
  }
  
  // Separator styling (the "/" between items)
  :global(.cds--breadcrumb-item::after) {
    color: $text-on-color;
    content: "/";
    margin: 0 $spacing-02;
  }
  
  // Remove separator after last item
  :global(.cds--breadcrumb-item:last-child::after) {
    display: none;
  }
}

.rightActions {
  display: flex;
  align-items: center;
  gap: $spacing-05;
}

.profileSection {
  display: flex;
  align-items: center;
  gap: $spacing-03;
}

.userAvatar {
  width: $spacing-06;
  height: $spacing-06;
  border-radius: 50%;
  background-color: $background-inverse;
}

.profileText {
  color: $text-on-color;
  @include type-style("body-compact-01");
}

.actionButton {
  // Ensure proper padding for the button
  min-height: auto;
}

@include breakpoint-down(lg) {
  .headerContent {
    padding: 0 $spacing-03;
  }
  
  .rightActions {
    gap: $spacing-03;
  }
  
  .actionButton {
    @include type-style("label-01");
  }
}

@include breakpoint-down(md) {
  .profileText {
    display: none;
  }
  
  .rightActions {
    gap: $spacing-02;
  }
}