@import '../../../styles/theme-variables.scss';

.searchResults {
  width: 100%;
  background-color: var(--background-color);
  border-radius: 8px;
  border: 1px solid var(--border-color);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

  @media (max-width: 767px) {
    border-radius: 0;
    border: none;
    box-shadow: none;
  }
}

// Results Header
.resultsHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 1.5rem;
  border-bottom: 1px solid var(--border-color);
  background-color: var(--background-color-secondary);

  @media (max-width: 767px) {
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
  }
}

.resultsCount {
  font-size: 1rem;
  font-weight: 600;
  color: var(--text-color);

  @media (max-width: 767px) {
    font-size: 0.875rem;
  }
}

.resultsControls {
  display: flex;
  align-items: center;
  gap: 1rem;

  @media (max-width: 767px) {
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
    width: 100%;
  }
}

// Sort Control
.sortControl {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.sortLabel {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--text-color);
  white-space: nowrap;
}

.sortSelect {
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-size: 0.875rem;
  background-color: var(--background-color);
  color: var(--text-color);
  cursor: pointer;
  min-width: 150px;

  &:focus {
    outline: 2px solid var(--focus-color);
    outline-offset: 2px;
    border-color: var(--border-color-focus);
  }

  option {
    padding: 0.5rem;
  }
}

// Filter Toggle
.filterToggle {
  padding: 0.5rem 1rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: var(--background-color);
  color: var(--text-color);
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background-color: var(--hover-color);
    border-color: var(--border-color-hover);
  }

  &:focus {
    outline: 2px solid var(--focus-color);
    outline-offset: 2px;
  }

  &.active {
    background-color: var(--primary-color-light);
    border-color: var(--primary-color);
    color: var(--primary-color-dark);
  }
}

// View Toggle
.viewToggle {
  display: flex;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  overflow: hidden;
}

.viewButton {
  padding: 0.5rem 0.75rem;
  border: none;
  background-color: var(--background-color);
  color: var(--text-color);
  font-size: 0.75rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  border-right: 1px solid var(--border-color);

  &:last-child {
    border-right: none;
  }

  &:hover {
    background-color: var(--hover-color);
  }

  &:focus {
    outline: 2px solid var(--focus-color);
    outline-offset: -2px;
    z-index: 1;
  }

  &.active {
    background-color: var(--primary-color);
    color: white;
  }
}

// Filter Panel
.filterPanel {
  padding: 1rem 1.5rem;
  border-bottom: 1px solid var(--border-color);
  background-color: var(--background-color-light);
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  animation: slideDown 0.3s ease-out;

  @media (max-width: 767px) {
    grid-template-columns: 1fr;
    padding: 1rem;
    gap: 0.75rem;
  }
}

@keyframes slideDown {
  0% {
    opacity: 0;
    transform: translateY(-10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.filterGroup {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.filterLabel {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--text-color);
}

.filterSelect,
.filterInput {
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-size: 0.875rem;
  background-color: var(--background-color);
  color: var(--text-color);

  &:focus {
    outline: 2px solid var(--focus-color);
    outline-offset: 2px;
    border-color: var(--border-color-focus);
  }
}

.filterSelect {
  cursor: pointer;
}

.filterInput {
  width: 100%;
}

// Bulk Operations
.bulkOperations {
  padding: 1rem 1.5rem;
  border-bottom: 1px solid var(--border-color);
  background-color: var(--background-color-light);
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;

  @media (max-width: 767px) {
    flex-direction: column;
    align-items: flex-start;
    padding: 1rem;
  }
}

.bulkSelection {
  display: flex;
  align-items: center;
}

.checkboxLabel {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  color: var(--text-color);
  cursor: pointer;

  input[type="checkbox"] {
    width: 16px;
    height: 16px;
    accent-color: var(--primary-color);
  }
}

.bulkActions {
  display: flex;
  align-items: center;
  gap: 1rem;

  @media (max-width: 767px) {
    width: 100%;
    justify-content: space-between;
  }
}

.selectedCount {
  font-size: 0.875rem;
  color: var(--text-color-secondary);
}

.bulkActionButton {
  padding: 0.5rem 1rem;
  border: 1px solid var(--primary-color);
  border-radius: 4px;
  background-color: var(--primary-color);
  color: white;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background-color: var(--primary-color-dark);
    border-color: var(--primary-color-dark);
  }

  &:focus {
    outline: 2px solid var(--focus-color);
    outline-offset: 2px;
  }
}

// Results Container
.resultsContainer {
  padding: 1.5rem;

  @media (max-width: 767px) {
    padding: 1rem;
  }

  &.gridView {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1rem;

    @media (max-width: 767px) {
      grid-template-columns: 1fr;
      gap: 0.75rem;
    }

    @media (min-width: 768px) and (max-width: 1023px) {
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    }

    @media (min-width: 1200px) {
      grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    }
  }

  &.listView {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;

    .patientCardWrapper {
      .patientCard {
        display: flex;
        align-items: center;
        padding: 0.75rem 1rem;
        border-radius: 6px;
      }
    }
  }

  &.mobileView {
    padding: 0.75rem;

    &.gridView {
      grid-template-columns: 1fr;
      gap: 0.5rem;
    }

    &.listView {
      gap: 0.25rem;
    }
  }
}

.patientCardWrapper {
  position: relative;
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
}

.bulkCheckbox {
  display: flex;
  align-items: center;
  padding-top: 0.75rem;

  input[type="checkbox"] {
    width: 16px;
    height: 16px;
    accent-color: var(--primary-color);
  }
}

.patientCard {
  flex: 1;
}

// Loading States
.loadingSkeleton {
  padding: 1.5rem;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1rem;

  @media (max-width: 767px) {
    grid-template-columns: 1fr;
    padding: 1rem;
  }
}

.skeletonCard {
  height: 200px;
  background: linear-gradient(
    90deg,
    var(--background-color-secondary) 25%,
    var(--hover-color) 50%,
    var(--background-color-secondary) 75%
  );
  background-size: 200% 100%;
  border-radius: 8px;
  animation: shimmer 1.5s infinite;

  @media (max-width: 767px) {
    height: 150px;
  }
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

// Error State
.errorState {
  padding: 2rem;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;

  @media (max-width: 767px) {
    padding: 1.5rem 1rem;
  }
}

.errorMessage {
  color: var(--error-color);
  font-size: 1rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
}

.retryButton {
  padding: 0.75rem 1.5rem;
  border: 1px solid var(--primary-color);
  border-radius: 4px;
  background-color: var(--primary-color);
  color: white;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background-color: var(--primary-color-dark);
    border-color: var(--primary-color-dark);
  }

  &:focus {
    outline: 2px solid var(--focus-color);
    outline-offset: 2px;
  }
}

// Empty State
.emptyState {
  padding: 3rem 2rem;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;

  @media (max-width: 767px) {
    padding: 2rem 1rem;
  }
}

.emptyMessage {
  max-width: 400px;

  h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-color);
  }

  p {
    margin: 0;
    font-size: 0.875rem;
    color: var(--text-color-secondary);
    line-height: 1.4;
  }
}

.createNewButton {
  padding: 0.75rem 1.5rem;
  border: 1px solid var(--primary-color);
  border-radius: 4px;
  background-color: var(--primary-color);
  color: white;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background-color: var(--primary-color-dark);
    border-color: var(--primary-color-dark);
  }

  &:focus {
    outline: 2px solid var(--focus-color);
    outline-offset: 2px;
  }
}

// Pagination
.paginationContainer {
  padding: 1rem 1.5rem;
  border-top: 1px solid var(--border-color);
  background-color: var(--background-color-secondary);

  @media (max-width: 767px) {
    padding: 1rem;
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .sortSelect,
  .filterSelect,
  .filterInput {
    border-width: 2px;
    border-color: currentColor;
  }

  .viewButton,
  .filterToggle,
  .bulkActionButton,
  .retryButton,
  .createNewButton {
    border-width: 2px;
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .filterPanel {
    animation: none;
  }

  .skeletonCard {
    animation: none;
    background: var(--background-color-secondary);
  }

  .sortSelect,
  .filterSelect,
  .filterInput,
  .viewButton,
  .filterToggle,
  .bulkActionButton,
  .retryButton,
  .createNewButton {
    transition: none;
  }
}

// Focus visible support for better keyboard navigation
.sortSelect:focus-visible,
.filterSelect:focus-visible,
.filterInput:focus-visible,
.viewButton:focus-visible,
.filterToggle:focus-visible,
.bulkActionButton:focus-visible,
.retryButton:focus-visible,
.createNewButton:focus-visible {
  outline: 2px solid var(--focus-color);
  outline-offset: 2px;
}

// Print styles
@media print {
  .searchResults {
    box-shadow: none;
    border: 1px solid #000;
  }

  .resultsControls,
  .filterPanel,
  .bulkOperations,
  .paginationContainer {
    display: none;
  }

  .resultsContainer {
    &.gridView {
      grid-template-columns: repeat(2, 1fr);
    }

    &.listView {
      gap: 0.25rem;
    }
  }

  .loadingSkeleton {
    display: none;
  }
}

// Hover state for mouse users only
@media (hover: hover) {
  .sortSelect:hover {
    border-color: var(--border-color-hover);
  }

  .filterToggle:hover:not(.active) {
    background-color: var(--hover-color);
    border-color: var(--border-color-hover);
  }

  .viewButton:hover:not(.active) {
    background-color: var(--hover-color);
  }

  .filterSelect:hover,
  .filterInput:hover {
    border-color: var(--border-color-hover);
  }

  .bulkActionButton:hover {
    background-color: var(--primary-color-dark);
    border-color: var(--primary-color-dark);
  }

  .retryButton:hover {
    background-color: var(--primary-color-dark);
    border-color: var(--primary-color-dark);
  }

  .createNewButton:hover {
    background-color: var(--primary-color-dark);
    border-color: var(--primary-color-dark);
  }
}

// Large screen optimizations
@media (min-width: 1200px) {
  .resultsHeader {
    padding: 1.5rem 2rem;
  }

  .filterPanel {
    padding: 1.5rem 2rem;
  }

  .bulkOperations {
    padding: 1.5rem 2rem;
  }

  .resultsContainer {
    padding: 2rem;
  }

  .paginationContainer {
    padding: 1.5rem 2rem;
  }
}

// Ultra-wide screen support
@media (min-width: 1600px) {
  .resultsContainer.gridView {
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  }
}
