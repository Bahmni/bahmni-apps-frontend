// Layout styles for the ClinicalLayout component
@use "@carbon/react/scss/spacing" as *;
@use "@carbon/react/scss/breakpoint" as *;
@use "@carbon/react/scss/colors" as *;
@use "@carbon/react/scss/layer" as *;
@use "@carbon/react/scss/theme" as *;

.layout {
  display: flex;
  flex-direction: column;
  height: 100vh; // Full viewport height
  width: 100%; // Full width but not forcing vw which can cause overflow
  overflow: hidden; // Prevent scrolling of the overall layout
}

// .header {
//   width: 100%;
//   z-index: 2; // Higher z-index to stay on top
//   box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
//   flex: 0 0 auto; // Don't grow, don't shrink, auto basis
// }

//TODO: Body should not be scrollable
.body {
  display: grid;
  grid-template-areas:
    "header patient-details"
    "header main-display";
  grid-template-columns: 16rem 1fr;
  grid-template-rows: auto 1fr;
  flex: 1; // Take all remaining space
  width: 100%;
  height: calc(100vh - 1rem);
  margin-top: 1rem;
}

.patientDetails {
  grid-area: patient-details;
  border-bottom: 1px solid $border-subtle-01; // Carbon border token
  position: fixed;
  width: inherit;
  left: 16rem;
  z-index: 1000;
}

.mainDisplay {
  grid-area: main-display;
  overflow-y: auto;
  position: fixed;
  bottom: 0;
  left: 16rem;
  height: calc(100vh - 10rem);
  width: calc(100vw - 16rem);
}

// Responsive adjustments using Carbon breakpoints
@include breakpoint-down(lg) {
  .body {
    grid-template-areas:
      "header patient-details"
      "header main-display";
    grid-template-columns: 3rem 1fr;
    grid-template-rows: auto auto 1fr;
  }

  .patientDetails {
    left: 3rem;
  }

  .mainDisplay {
    width: calc(100vw - 3rem);
    left: 3rem;
  }
}
